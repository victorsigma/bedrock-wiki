import{_ as a,c as e,a as o,w as l,e as s,r as p,o as t,d as r}from"./404.md.f0d453c2.js";const c="/assets/images/gametest/script-server/dynamic_properties.png",g=JSON.parse('{"title":"Script Core Features","description":"","frontmatter":{"title":"Script Core Features","category":"Tutorials","tags":["experimental"],"mentions":["JaylyDev","SmokeyStack","ThomasOrs","kumja1"]},"headers":[{"level":2,"title":"Setup","slug":"setup","link":"#setup","children":[]},{"level":2,"title":"Events","slug":"events","link":"#events","children":[]},{"level":2,"title":"Scheduling","slug":"scheduling","link":"#scheduling","children":[]},{"level":2,"title":"Saving and Loading","slug":"saving-and-loading","link":"#saving-and-loading","children":[]},{"level":2,"title":"Running Commands","slug":"running-commands","link":"#running-commands","children":[]},{"level":2,"title":"BeforeEvents privilege system","slug":"beforeevents-privilege-system","link":"#beforeevents-privilege-system","children":[]}],"relativePath":"scripting/script-server.md"}'),i={name:"scripting/script-server.md"},y=s('<div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>The Script API is currently in active development, and breaking changes are frequent. This page assumes the format of Minecraft 1.20.30</p></div><p>In Scripting API, most of the core features are implemented in the <code>@minecraft/server</code> module, with lots of methods to interact a Minecraft world, including entities, blocks, dimensions, and more programmatically. This article contains a basic introduction to some of the core API mechanics, for more detailed information please visit <a href="https://learn.microsoft.com/en-us/minecraft/creator/scriptapi/minecraft/server/minecraft-server" target="_blank" rel="noreferrer">Microsoft docs</a>.</p><h2 id="setup" tabindex="-1">Setup <a class="header-anchor" href="#setup" aria-hidden="true">#</a></h2><p>You will need to add the Script module as a dependency in your <code>manifest.json</code>.</p>',4),D=s(`<div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">dependencies</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">module_name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@minecraft/server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.5.0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-hidden="true">#</a></h2><p>In Scripting API, the <code>@minecraft/server</code> module uses their own event-driven architecture, making it possible to execute code when a specific event occurs, by subscribing to a specific event listener.</p><p><strong>World Events</strong></p><p>World events API provides many event listeners that fires when a specific type of events happen in/to a Minecraft world, events such as <code>chatSend</code>, <code>entityHurt</code>, <code>playerSpawn</code>, <code>worldInitialize</code> and many more.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Check out Microsoft docs to see what world events are available in Minecraft: <a href="https://learn.microsoft.com/en-us/minecraft/creator/scriptapi/minecraft/server/events" target="_blank" rel="noreferrer">Events documentation</a></p></div><p>In order to subscribe to an event, get the <code>events</code> property from world object. In this example we&#39;re subscribing to a blockBreak event.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">world</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@minecraft/server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">-</span></span>
<span class="line"><span style="color:#676E95;">// subscribing to a blockBreak event</span></span>
<span class="line"><span style="color:#676E95;">// - fires when a player breaks a block</span></span>
<span class="line"><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">afterEvents</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">playerBreakBlock</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subscribe</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">player</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;">// Player that broke the block</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">block</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">block</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;">// Block that&#39;s broken</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">player</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendMessage</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">You have broken </span><span style="color:#89DDFF;">\${</span><span style="color:#A6ACCD;">block</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">typeId</span><span style="color:#89DDFF;">}\`</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;">// send a message to player</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>System events</strong></p><p>System events fires when a specific type of event happens in the scope of the Minecraft add-on system.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Check out Microsoft docs to see what system events are available in Minecraft: <a href="https://learn.microsoft.com/en-us/minecraft/creator/scriptapi/minecraft/server/systemevents" target="_blank" rel="noreferrer">SystemEvents documentation</a></p></div><p>Just like world events, get the <code>events</code> property from system object. In this example we&#39;re subscribing to a beforeWatchdogTerminate event, where the API can cancel the performance watchdog terminates scripting execution due to exceeding a performance boundary, depending on the configuration of the runtime environment.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">system</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@minecraft/server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// subscribing to a beforeWatchdogTerminate event</span></span>
<span class="line"><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">beforeEvents</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">watchdogTerminate</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subscribe</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cancel</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">warn</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Canceled critical exception of type </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">terminateReason</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>ScriptEvents</strong></p><p>ScriptEvents, not to be confused with world events or system events, allows us to respond to inbound <code>/scriptevent</code> commands by registering <code>scriptEventReceive</code> event handler, which the event fires if a <code>/scriptevent</code> command is invoked by a player, NPC, or block.- <code>/scriptevent</code> - Triggers a script event with an ID and message.</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">/scriptevent &lt;messageId: string&gt; &lt;message: string&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><ul><li><code>messageId</code> in scriptevent command can be received in API via <code>ScriptEventCommandMessageEvent.id</code></li><li><code>message</code> in scriptevent command can be received in API via <code>ScriptEventCommandMessageEvent.message</code></li></ul><p><strong>Example</strong>:</p><p>Command input:</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">/scriptevent wiki:test Hello World</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>What event listener returns:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">system</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@minecraft/server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">afterEvents</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">scriptEventReceive</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subscribe</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  	</span><span style="color:#A6ACCD;">id</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">           </span><span style="color:#676E95;">// returns string (wiki:test)</span></span>
<span class="line"><span style="color:#F07178;">  	</span><span style="color:#A6ACCD;">initiator</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">    </span><span style="color:#676E95;">// returns Entity</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">message</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">      </span><span style="color:#676E95;">// returns string (Hello World)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">sourceBlock</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">  </span><span style="color:#676E95;">// returns Block</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">sourceEntity</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#676E95;">// returns Entity</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">sourceType</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">   </span><span style="color:#676E95;">// returns MessageSourceType</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="scheduling" tabindex="-1">Scheduling <a class="header-anchor" href="#scheduling" aria-hidden="true">#</a></h2><p>We may decide to execute a function not right now, but at a certain time later. That\u2019s called \u201Cscheduling a call\u201D.</p><p>In Script API, basic methods like <code>setTimeout</code> and <code>setInterval</code> does not exist in the scripting engine, instead Minecraft implements their own scheduling methods.</p><p>These methods can be accessed from the <code>system</code> object obtained by:</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">system</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@minecraft/server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>There are two methods for it:</p><p><strong>Scheduling timers</strong><code>system.run(callback)</code> - Runs a specified function at the tick after the current tick. This is frequently used to implement delayed behaviors and game loops.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">world</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@minecraft/server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendMessage</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">This runs a tick after the last tick</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>system.runInterval(callback, tickInterval?)</code> - Runs a function repeatedly, starting after the interval of time, then repeating continuously at that interval.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">world</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@minecraft/server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">runInterval</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendMessage</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">This message runs every 20 ticks</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><code>system.runTimeout(callback, tickDelay?)</code> - Runs a function once after the interval of time.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">world</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@minecraft/server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">runTimeout</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendMessage</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">This message runs once after 20 ticks has passed.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>Clearing timers</strong><code>system.clearRun(runId): void</code> - Cancels the execution of a function run that was previously scheduled via the <code>run</code>, <code>runTimeout</code> or <code>runInterval</code> function.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">world</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@minecraft/server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> callbackId </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> system</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">runInterval</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendMessage</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Running every tick</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">runTimeout</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">clearRun</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">callbackId</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;">// stops system.runInterval callback from running after 20 ticks</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendMessage</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Stopped</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="saving-and-loading" tabindex="-1">Saving and Loading <a class="header-anchor" href="#saving-and-loading" aria-hidden="true">#</a></h2><p>With the @minecraft/server module, developers can define their own custom properties, known as dynamic properties, that can be used and stored within Minecraft. These data are stored specifically in the db folder using a behavior pack&#39;s module UUID.</p><p><img src="`+c+`" alt="dynamic_properties"></p><p>In order to save data, the property must be initialised first. There are multiple ways to declare dynamic properties, either on an entity type or world. You can define as many numbers and booleans as you would like, however Minecraft API only allows each - behavior pack to save a limited bytes of string.- -If you register property in EntityType, each entity can save up to 1,000 bytes of text data.</p><ul><li>If you register property in World, each entity can save up to 10,000 bytes of text data.</li></ul><p>The <code>DynamicPropertiesDefinition</code> class is used in conjunction with the <code>PropertyRegistry</code> class to define dynamic properties that can be used on entities of a specified type or at the global World-level. The <code>defineBoolean</code>, <code>defineNumber</code>, and <code>defineString</code> methods are used to define new boolean, number, and string dynamic properties, respectively.</p><p>To register dynamic properties in Minecraft, developers can subscribe to the <code>worldInitialize</code> event provided by the <code>world</code> object in the <code>@minecraft/server</code> module. Here&#39;s an example of how to do that:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">DynamicPropertiesDefinition</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">world</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@minecraft/server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">afterEvents</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">worldInitialize</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subscribe</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">propertiesDefinition</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">DynamicPropertiesDefinition</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">propertiesDefinition</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineBoolean</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">isAngry</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">propertyRegistry</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">registerEntityTypeDynamicProperties</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">propertiesDefinition</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">minecraft:zombie</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>In this example, we are defining a boolean dynamic property called <code>isAngry</code> and registering it for all zombie entities in the world. The registerEntityTypeDynamicProperties method is used to register the dynamic property for a particular entity type, in this case, <code>minecraft:zombie</code>.</p><p>Similarly, you can use the <code>registerWorldDynamicProperties</code> method to register globally available dynamic properties for a world. Here&#39;s an example of how to register a number dynamic property called <code>playerScore</code> for the entire world:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">DynamicPropertiesDefinition</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">world</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@minecraft/server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">afterEvents</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">worldInitialize</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subscribe</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">propertiesDefinition</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">DynamicPropertiesDefinition</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">propertiesDefinition</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineNumber</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">playerScore</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">propertyRegistry</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">registerWorldDynamicProperties</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">propertiesDefinition</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>In this example, we are defining a number dynamic property called <code>playerScore</code> and registering it globally for the entire world using the <code>registerWorldDynamicProperties</code> method.</p><p><strong>Get and Set Dynamic Properties</strong></p><p>To get and set dynamic properties, you can use the <code>getDynamicProperty</code> and <code>setDynamicProperty</code> methods.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>It is important to note that registering a dynamic property does not set a value on the property. Unless the value of the property is saved in the world already, when getting the property for the first time, the method returns nothing.</p></div><p>With this in mind, here are some examples of how to get and set dynamic properties in Minecraft:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">world</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@minecraft/server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">afterEvents</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">entityHitEntity</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subscribe</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">({</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">hitEntity</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">})</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">if</span><span style="color:#F07178;"> (</span><span style="color:#A6ACCD;">hitEntity</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">typeId</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">minecraft:zombie</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">return</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;">// only zombies that got hit</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">hitEntity</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setDynamicProperty</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">isAngry</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;">// set boolean property with value</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">isAngry</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">hitEntity</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getDynamicProperty</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">boolean</span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">isAngry</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;">// get boolean property</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>In this example, we are setting a boolean dynamic property called <code>isAngry</code> on a zombie entity that got hit. We then get the value of the <code>isAngry</code> property using the <code>getDynamicProperty</code> method.</p><p>Here is an example of how to get and set dynamic properties at the global World-level:</p><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">world</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@minecraft/server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setDynamicProperty</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">playerScore</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// set number property with value</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> playerScore </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getDynamicProperty</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">playerScore</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;">// get number property</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>In this example, we are setting a number dynamic property called <code>playerScore</code> globally for the entire world using the <code>setDynamicProperty</code> method. We then get the value of the <code>playerScore</code> property using the <code>getDynamicProperty</code> method.</p><h2 id="running-commands" tabindex="-1">Running Commands <a class="header-anchor" href="#running-commands" aria-hidden="true">#</a></h2><p><code>Entity.runCommandAsync()</code> or <code>Dimension.runCommandAsync()</code> allows the API to run a particular command asynchronously from the context of the broader dimension. Note that there is a maximum queue of 128 asynchronous commands that can be run in a given tick.</p><p>Usually, it executes the command in the next tick. To run command parallel with the script, you have to surround your code in a asynchronous function.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">world</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@minecraft/server</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">await</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getDimension</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">overworld</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">runCommandAsync</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">say Using say command on dimension.</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sendMessage</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">This runs after runCommandAsync is executed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>Returns a <code>Promise&lt;CommandResult&gt;</code>. Throws an error <strong>synchronously</strong> if the queue is full.</p><p><strong>Avoid run commands in script</strong></p><p>Normally we recommend avoiding using commands because it&#39;s slow to run a command from Script API, and server performance starts to slow down as more commands are executed over time. However, the following command features are not implemented in scripting API, which leaves us no choice but to use <code>runCommand</code> or <code>runCommandAsync</code>.</p><p><strong>Ender chest</strong></p><p>Script API does not provide any methods to get/set information of player&#39;s ender chest. Commands such as <code>/replaceitem</code>, <code>/clear</code>, <code>@s[hasitem=]</code> may be used as a workaround.</p><p><strong>tickingarea</strong></p><p>Script API can&#39;t access ticking areas.</p><p><strong>kick</strong></p><p>Script API can&#39;t kick player. Without proxying that command via execute as</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">player.runcommand(&#39;execute as &quot; + player.name + &quot; run kick &quot; + playerToKick +&quot; &quot; +reason);</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p><strong>setblock</strong></p><p>Script API can&#39;t destroy block <code>/setblock ... destroy</code></p><p><strong>titleraw</strong></p><p>Script API can&#39;t display translations in title, subtitle or actionbar in rawtext json. Consider using <code>%</code> (e.g. <code>%death.fell.accident.water%</code>)</p><p><strong>Player&#39;s abilities</strong></p><ul><li>Script API you can&#39;t set abilities for each player.</li><li>You can&#39;t read player&#39;s abilities.</li></ul><p><strong>execute</strong></p><p>Script API new execute can be useful to run command with lot of if/unless condition for simplicity or maybe performance.</p><p>Sometimes this <code>/execute</code> used to trigger <code>/loot</code> command, as <code>runCommandAsync</code> cannot trigger loots in the API.</p><p><strong>Minecraft functions</strong></p><p>Script API cannot run Minecraft function files without the use of <code>/function</code>.</p><p><strong>gamerule</strong></p><ul><li>Script API cannot set any game rules.</li><li>Cannot read game rules&#39; value.</li></ul><p><strong>locate</strong></p><ul><li>Script API cannot get structure&#39;s location.</li><li>Cannot get biome&#39;s location.</li></ul><p><strong>loot</strong></p><p>Script API even though the loot is broken from the start, but it&#39;s useful for drop or set the item to players/world.</p><p><strong>weather</strong> Script API can&#39;t get weather directly</p><p><strong>difficulty</strong></p><p>Script API can&#39;t set world difficulty.</p><p><strong>mobevent</strong></p><p>Script API can&#39;t enable/disable mobevent.</p><p><strong>camerashake</strong></p><p>Script API can&#39;t add/stop camera shake for player.</p><p><strong>fog</strong></p><p>Script API can&#39;t manage active fog settings for player.</p><p><strong>stopsound</strong></p><p>Script API can&#39;t stop playing a sound.</p><p><strong>dialogue</strong></p><ul><li>Script API can&#39;t open the NPC dialogue to player.</li><li>Can&#39;t change the dialogue displayed by an NPC.</li></ul><h2 id="beforeevents-privilege-system" tabindex="-1">BeforeEvents privilege system <a class="header-anchor" href="#beforeevents-privilege-system" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>The developers may release an article discussing this topic in Microsoft Learn, for now these are the infomation the community gathered.</p></div><p>In 1.20.0, Minecraft Scripting API releases a privilege system for callbacks fired in before events (i.e. <code>ChatSendBeforeEvent</code>).</p><p>This limits the native functions that are allowed to be executed in the callback, which most of the functions are the native functions that modifies changes to Minecraft (like setting the world time with <code>World::setTime()</code>) in the same tick. The purpose of this implementation is to avoid cascading changes in the middle of a game tick.</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">beforeEvents</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">chatSend</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subscribe</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cancel</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setTime</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">TimeOfDay</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Night</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>In the example code above, the world sets the time and cancels a message from being sent to the chat. It also changes the time of the world to night using <code>world.setTime()</code>, which throws error as the native function does not have the privilege to change the state of the world.</p><p>To migrate your code to this new system. You must run these native functions that requires privilege in the tick after the tick that fires the event, using the following methods:</p><ol><li>Use <code>system.run</code>:</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">beforeEvents</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">chatSend</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subscribe</span><span style="color:#A6ACCD;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cancel</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">system</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">run</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">		</span><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setTime</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">TimeOfDay</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Night</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>To migrate code with the new privilege system, the <code>world.setTime()</code> function is wrapped inside the <code>system.run()</code> method, which delays its execution by a tick. This ensures that the function is not executed in the same tick that the before event fires.</p><ol start="2"><li>Execute function at a later tick using <code>async</code> functions:</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">beforeEvents</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">chatSend</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">subscribe</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">async</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// synchronous code</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">event</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cancel</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;">// asynchronous code</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">await</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">sleep</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">10</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span><span style="color:#F07178;"> </span><span style="color:#676E95;">// Pretend you have a sleep function that returns a promise that resolves in 10 ticks</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#A6ACCD;">world</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">setTime</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">TimeOfDay</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">Night</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>By using <code>async</code> functions that wait for longer than a tick the privelege system can be bypassed. As the code before <code>await</code> is run synchronously, so the event can be canceled with <code>event.cancel = true</code>, and in the later ticks the operation can proceed. Note that async/await calls alone are not enough, as code run in this manner still performs synchronously until a blocking call is used (such as the <code>sleep()</code> function in the example).</p>`,114);function F(d,A,C,u,m,b){const n=p("CodeHeader");return t(),e("div",null,[y,o(n,null,{default:l(()=>[r("BP/manifest.json")]),_:1}),D])}const v=a(i,[["render",F]]);export{g as __pageData,v as default};
