import{_ as t,c as l,a,b as n,d as e,e as o,o as p,r}from"./404.md.f0d453c2.js";const i="/assets/images/visuals/math-based-animations/animation-1.gif",f=JSON.parse('{"title":"Math-based Animations","description":"","frontmatter":{"title":"Math-based Animations","tags":["intermediate"],"category":["General"],"mentions":["SirLich","solvedDev","Joelant05","MedicalJewel105","yanasakana","Luthorius","TheItsNameless","SmokeyStack","ThomasOrs"]},"headers":[{"level":2,"title":"Writing Math-Animations","slug":"writing-math-animations","link":"#writing-math-animations","children":[{"level":3,"title":"By Hand","slug":"by-hand","link":"#by-hand","children":[]},{"level":3,"title":"In Blockbench","slug":"in-blockbench","link":"#in-blockbench","children":[]}]},{"level":2,"title":"Using Queries","slug":"using-queries","link":"#using-queries","children":[{"level":3,"title":"Avoiding Animation Controllers","slug":"avoiding-animation-controllers","link":"#avoiding-animation-controllers","children":[]}]},{"level":2,"title":"Example","slug":"example","link":"#example","children":[]}],"relativePath":"visuals/math-based-animations.md"}'),c={name:"visuals/math-based-animations.md"},d=n("p",null,[e("Math animations are a powerful alternative to keyframe animations. Generally speaking, "),n("code",null,"math-based animations"),e(" is the concept of using Molang expressions to animate entity geometry. All vanilla animations are math-based, here is an example:")],-1),m=o(`<div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">leftarm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> : </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">rotation</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">((-0.2 + 1.5 * (math.abs(math.mod(q.modified_distance_moved, 13) - 6.5) - 3.25) / 3.25) * q.modified_move_speed) * 57.3 - v.agent.armxrotationfactor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0.0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">-v.agent.armzrotation</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>As you can see, math-based animations can be quite complicated and difficult to understand. Thus, they should be treated as a <em>specialized-alternative</em> to using key-frames - not a <em>total</em> replacement.</p><p>This is the cost of the smooth and ideal loop of the animation.</p><p><img src="`+i+'" alt=""></p><h2 id="writing-math-animations" tabindex="-1">Writing Math-Animations <a class="header-anchor" href="#writing-math-animations" aria-hidden="true">#</a></h2><h3 id="by-hand" tabindex="-1">By Hand <a class="header-anchor" href="#by-hand" aria-hidden="true">#</a></h3><p>To write such an animation by hand, simply create an animation file and substitute keyframes for singular arrays of values; strings values are accepted, and it is in a string that one may place a math expression. The Vanilla files can prove an invaluable reference for these types of animations, and it is <strong>strongly</strong> recommended you download and preview them!</p><p>As an important tip for those who wish to <em>visualise</em> their processes, the tool, <a href="https://jannisx11.github.io/molang-grapher/" target="_blank" rel="noreferrer">Molang Grapher</a> from <a href="https://twitter.com/jannisx11" target="_blank" rel="noreferrer">Jannis</a> may simulate expressions on a proper graph!</p><h3 id="in-blockbench" tabindex="-1">In Blockbench <a class="header-anchor" href="#in-blockbench" aria-hidden="true">#</a></h3><p>Blockbench allows - to a degree - for the creation and live-previewing of most math-based animations. To begin, first create a new keyframe at frame 0 in your timeline. You may then add and edit Molang expressions in the keyframe panel on the left sidebar. Mixing keyframes and math is supported. <strong>Remember</strong>, you should always omit quotation marks around expressions; they are only required in raw JSON-editing!</p><p>Do mind that not all Molang queries are supported in Blockbench in part due to missing game-context. If you wish to preview an animation that uses a context-specific query, you may add it to the Variable Placeholders section, just underneath the keyframe panel, to simulate a value. For example, adding <code>q.modified_distance_moved = time*8</code> simulates the <code>modified_distance_moved</code> query with a speed of 8 blocks per second.</p><h2 id="using-queries" tabindex="-1">Using Queries <a class="header-anchor" href="#using-queries" aria-hidden="true">#</a></h2><p>The largest and most useful of tools in our mathematical repertoire is the wide array of Molang &quot;Queries&quot;. Queries can be used to add outside information into your math expression.</p><p>Common Queries include:</p><ul><li><code>q.modified_distance_moved</code></li><li><code>q.modified_move_speed</code></li><li><code>q.anim_time</code></li><li><code>q.life_time</code></li></ul><p>These are utilised in animations to draw things such as the attack-time or distance-moved from the game-world to provide a more dynamic and synced flow.</p><h3 id="avoiding-animation-controllers" tabindex="-1">Avoiding Animation Controllers <a class="header-anchor" href="#avoiding-animation-controllers" aria-hidden="true">#</a></h3><p>By using queries, you can avoid the need to create animation controllers. If the entity&#39;s speed is directly related to the speed of the walk animation, then by default, an entity that isn&#39;t moving won&#39;t be animated.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-hidden="true">#</a></h2><p>A specific application example of a Math-Based animation may be found below. The example utilises the Molang Query, <code>&quot;q.modified_distance_moved&quot;</code>:</p>',20),D=o(`<div class="language-json line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">format_version</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1.12.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">animations</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">animation.car.wheel_spin</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">loop</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">true,</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F78C6C;">bones</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">front_wheels</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">					</span><span style="color:#89DDFF;">&quot;</span><span style="color:#916B53;">rotation</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">q.modified_distance_moved * -30</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">back_wheels</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">					</span><span style="color:#89DDFF;">&quot;</span><span style="color:#916B53;">rotation</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">q.modified_distance_moved * -30</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">				</span></span>
<span class="line"><span style="color:#A6ACCD;">			</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>In this example, the model&#39;s bones, <code>front_wheels</code> and <code>back_wheels</code>, are rotated on the X-axis based on information passed from <code>q.modified_distance_moved</code>, then multiplied by -30.</p><p>This means that a car at <em>rest</em> <strong>will not</strong> spin, and a car that is <em>driving</em> <strong>will spin</strong> - doing so at a rate proportional to the car&#39;s movement speed.</p>`,3);function y(u,h,F,C,b,A){const s=r("CodeHeader");return p(),l("div",null,[d,a(s),m,a(s),D])}const _=t(c,[["render",y]]);export{f as __pageData,_ as default};
