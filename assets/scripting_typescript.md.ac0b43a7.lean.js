import{_ as r,c,a,w as p,e as l,b as s,d as n,r as t,o as i}from"./404.md.f0d453c2.js";const E=JSON.parse('{"title":"TypeScript","description":"","frontmatter":{"title":"TypeScript","category":"Documentation","mentions":["BlueFrog130","sermah","SmokeyStack","SirLich","Fabrimat","JaylyDev","Herobrine643928","ThomasOrs"]},"headers":[{"level":2,"title":"How it Works","slug":"how-it-works","link":"#how-it-works","children":[]},{"level":2,"title":"Script API","slug":"script-api","link":"#script-api","children":[]},{"level":2,"title":"Prerequisites","slug":"prerequisites","link":"#prerequisites","children":[]},{"level":2,"title":"Setup Guide","slug":"setup-guide","link":"#setup-guide","children":[{"level":3,"title":"Getting Started","slug":"getting-started","link":"#getting-started","children":[]},{"level":3,"title":"Project Structure","slug":"project-structure","link":"#project-structure","children":[]},{"level":3,"title":"Writing scripts","slug":"writing-scripts","link":"#writing-scripts","children":[]},{"level":3,"title":"Commands","slug":"commands","link":"#commands","children":[]},{"level":3,"title":"Packaging","slug":"packaging","link":"#packaging","children":[]}]}],"relativePath":"scripting/typescript.md"}'),y={name:"scripting/typescript.md"},D=l("",23),F=s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},"TIP"),s("p",null,[n("If you receive an error such as "),s("code",null,"command npm not found"),n(", ensure you have Node.js installed and added to the PATH.")])],-1),d=s("p",null,[n("Now the project can be initialized. The next step is to create a TypeScript project by creating a "),s("code",null,"tsconfig.json"),n(" file in your current directory, with the following details which simulates the Minecraft Scripting API file system.")],-1),u=l("",3),C=s("p",null,[n("Unless you know what you are doing, the only part of the project to be concerned with is everything within the "),s("code",null,"src"),n(" folder. That is where all the development should take place.")],-1),A=s("h3",{id:"writing-scripts",tabindex:"-1"},[n("Writing scripts "),s("a",{class:"header-anchor",href:"#writing-scripts","aria-hidden":"true"},"#")],-1),h=s("p",null,[n("Now write your first TypeScript code in "),s("code",null,"src"),n(" directory, for example below:")],-1),b=l("",7),m=s("p",null,[n("Now the "),s("code",null,"src/Main.ts"),n(" file should have been transpiled to "),s("code",null,"scripts/Main.js"),n(" with the following code:")],-1),g=l("",3),f=s("p",null,"Congratulations, you have created your first TypeScript project for Script API.",-1);function v(w,_,S,k,T,j){const e=t("FolderView"),o=t("CodeHeader");return i(),c("div",null,[D,a(e,{paths:["node_modules","package-lock.json","package.json"]},null,8,["paths"]),F,d,a(o,null,{default:p(()=>[n("tsconfig.json")]),_:1}),u,a(e,{paths:["node_modules","src/Main.ts","manifest.json","pack_icon.png","package-lock.json","package.json","tsconfig.json"]},null,8,["paths"]),C,A,h,a(o,null,{default:p(()=>[n("BP/src/Main.ts")]),_:1}),b,a(e,{paths:["node_modules","scripts/Main.js","src/Main.ts","manifest.json","pack_icon.png","package-lock.json","package.json","tsconfig.json"]},null,8,["paths"]),m,a(o,null,{default:p(()=>[n("BP/scripts/Main.js")]),_:1}),g,a(e,{paths:["scripts/Main.js","manifest.json","pack_icon.png"]},null,8,["paths"]),f])}const P=r(y,[["render",v]]);export{E as __pageData,P as default};
