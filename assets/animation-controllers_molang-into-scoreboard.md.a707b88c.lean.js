import{_ as e,c as t,a as o,w as l,b as s,d as n,e as p,r,o as c}from"./404.md.f0d453c2.js";const h=JSON.parse('{"title":"Molang into Scoreboard","description":"","frontmatter":{"title":"Molang into Scoreboard","mentions":["SirLich","MedicalJewel105","shanewolf38","Luthorius","TheItsNameless","ThomasOrs"]},"headers":[],"relativePath":"animation-controllers/molang-into-scoreboard.md"}'),D={name:"animation-controllers/molang-into-scoreboard.md"},y=s("p",null,[n("The following provides a method to read any Molang (variable, query, etc.) into a score instantly. Ensure that the animation name called in the controllers "),s("code",null,"convert"),n(" state matches the name of the animation (animation.namespace.molang_to_score) as defined in the entity.")],-1),F=s("p",null,[s("strong",null,"NOTE:"),n(" These two commands must be run in the world as part of the setup: "),s("code",null,"/scoreboard objectives add MoLang dummy"),s("code",null,'/scoreboard players set "#10" MoLang 10')],-1),C=p("",1),i=p("",3);function A(u,q,b,d,m,_){const a=r("CodeHeader");return c(),t("div",null,[y,F,o(a,null,{default:l(()=>[n("BP/animation_controllers/molang_to_score.animation_controllers.json")]),_:1}),C,o(a,null,{default:l(()=>[n("BP/animations/molang_to_score.animation.json")]),_:1}),i])}const E=e(D,[["render",A]]);export{h as __pageData,E as default};
